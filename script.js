// Test Data
const currParcels = {
  type: 'FeatureCollection',
  name: 'selected',
  crs: {
    type: 'name',
    properties: { name: 'urn:ogc:def:crs:OGC:1.3:CRS84' },
  },
  features: [
    {
      type: 'Feature',
      properties: {
        uID: 213,
        block_id: 'SLE.4.2.1_1_484',
        gadm_code: null,
        country_code: null,
      },
      geometry: {
        type: 'Polygon',
        coordinates: [
          [
            // [1, 0],
            // [1, 1],
            // [0, 1],
            // [1, 0],
            [-13.196747818462239, 8.470800653649318],
            [-13.196747470924267, 8.470804906599355],
            [-13.196747623083455, 8.470806694047887],
            [-13.196747146851784, 8.470812468134774],
            [-13.19674561788506, 8.470817243992414],
            [-13.196743036183282, 8.470821021620845],
            [-13.196742436092901, 8.470821480533971],
            [-13.196740001708104, 8.470824369918423],
            [-13.196736380326682, 8.470826571643698],
            [-13.1967360997212, 8.470826895620126],
            [-13.196732220495878, 8.470829402912569],
            [-13.196732201255365, 8.470829424660577],
            [-13.196728371033984, 8.470832018412072],
            [-13.196728027521138, 8.470832151094621],
            [-13.196724533789766, 8.470834605504324],
            [-13.196723836671866, 8.47083490460488],
            [-13.196720223466917, 8.470837519496078],
            [-13.196719692888879, 8.470837776103116],
            [-13.196715635832046, 8.470840865010569],
            [-13.196711955558918, 8.470844898457246],
            [-13.196701489506149, 8.470860669617826],
            [-13.196672608603096, 8.470832126444186],
            [-13.1966973997457, 8.470820141646273],
            [-13.196698555884156, 8.470819835102791],
            [-13.196702885707465, 8.470817416814658],
            [-13.196703158638428, 8.470817146667265],
            [-13.196707100345622, 8.470814851499831],
            [-13.196707120515217, 8.470814830108448],
            [-13.196711046394158, 8.470812435665133],
            [-13.196711364794851, 8.470812349765724],
            [-13.196714969027479, 8.470810034199626],
            [-13.196715633582029, 8.470809853568719],
            [-13.196718891994738, 8.470807633456609],
            [-13.196719901770395, 8.470807356607352],
            [-13.196722815386003, 8.470805233630944],
            [-13.196724876407803, 8.470804662807931],
            [-13.196726919044192, 8.470803071147705],
            [-13.196732135138882, 8.470801521277572],
            [-13.196734459636293, 8.470800581039597],
            [-13.196740652922752, 8.470799817362073],
            [-13.196745631966376, 8.470800084578386],
            [-13.196747781878605, 8.470799884934024],
            [-13.196747818462239, 8.470800653649318],
          ],
        ],
      },
    },
    {
      type: 'Feature',
      properties: {
        uID: 214,
        block_id: 'SLE.4.2.1_1_484',
        gadm_code: null,
        country_code: null,
      },
      geometry: {
        type: 'Polygon',
        coordinates: [
          [
            // [0, 0],
            // [0, 1],
            // [1, 0],
            // [0, 0],
            [-13.19683555556789, 8.470809539400962],
            [-13.196841009035245, 8.470811284377934],
            [-13.196844410206205, 8.470811559194427],
            [-13.196847480356032, 8.470812337088892],
            [-13.196853789916918, 8.470812925485916],
            [-13.1968544322129, 8.470813062975983],
            [-13.19686081182137, 8.470813684834001],
            [-13.196868515612458, 8.470815162007751],
            [-13.196876979681502, 8.470817439530123],
            [-13.196885313014883, 8.470820220098215],
            [-13.1967682, 8.4709266],
            [-13.196701489506149, 8.470860669617826],
            [-13.196711955558918, 8.470844898457246],
            [-13.196715635832046, 8.470840865010569],
            [-13.196719692888879, 8.470837776103116],
            [-13.196720223466917, 8.470837519496078],
            [-13.196723836671866, 8.47083490460488],
            [-13.196724533789766, 8.470834605504324],
            [-13.196728027521138, 8.470832151094621],
            [-13.196728371033984, 8.470832018412072],
            [-13.196732201255365, 8.470829424660577],
            [-13.196732220495878, 8.470829402912569],
            [-13.1967360997212, 8.470826895620126],
            [-13.196736380326682, 8.470826571643698],
            [-13.196740001708104, 8.470824369918423],
            [-13.196742436092901, 8.470821480533971],
            [-13.196743036183282, 8.470821021620845],
            [-13.19674561788506, 8.470817243992414],
            [-13.196747146851784, 8.470812468134774],
            [-13.196747623083455, 8.470806694047887],
            [-13.196747470924267, 8.470804906599355],
            [-13.196747818462239, 8.470800653649318],
            [-13.196747781878605, 8.470799884934024],
            [-13.196747805875898, 8.470799851892471],
            [-13.196750504678274, 8.470796975123667],
            [-13.19675086476923, 8.470796481166609],
            [-13.196753984404795, 8.470793160963392],
            [-13.196755537999881, 8.470791868178795],
            [-13.196757298792944, 8.470790002746661],
            [-13.19675888139006, 8.470788683733826],
            [-13.196760619866112, 8.470786850090201],
            [-13.196762175684871, 8.470785551396357],
            [-13.19676394089036, 8.470783697393029],
            [-13.196765470017239, 8.470782419106829],
            [-13.19676726186915, 8.47078054465802],
            [-13.196768764384517, 8.470779286861866],
            [-13.196770582805625, 8.47077739188779],
            [-13.196772058784312, 8.470776154658404],
            [-13.196773227479465, 8.470774941205406],
            [-13.196777364012556, 8.470775590601939],
            [-13.196783185847162, 8.470775790741843],
            [-13.196783281885001, 8.470775808989336],
            [-13.196789166160734, 8.470776016997755],
            [-13.196789197722195, 8.470776024777395],
            [-13.196795116793593, 8.470776244696046],
            [-13.19679515484677, 8.47077623408325],
            [-13.19680104756138, 8.470776479552839],
            [-13.196801215429836, 8.470776372419444],
            [-13.196805583194452, 8.470776690510039],
            [-13.196808347755274, 8.470775336869059],
            [-13.196806401335877, 8.470780281804187],
            [-13.196810319593363, 8.47077995363494],
            [-13.196810065137552, 8.470783243975013],
            [-13.19681304623667, 8.470783743657583],
            [-13.196813338632948, 8.470786471602295],
            [-13.196815938756988, 8.470787351993996],
            [-13.196816492661045, 8.47078978048207],
            [-13.196818894443611, 8.470790891143903],
            [-13.196819594548819, 8.470793124823674],
            [-13.196821880875724, 8.470794396618031],
            [-13.196822669033502, 8.470796487802735],
            [-13.196824884578275, 8.47079788317571],
            [-13.1968257273408, 8.470799861784386],
            [-13.196827898946866, 8.470801358050771],
            [-13.196828775301592, 8.470803242802909],
            [-13.196830920363841, 8.470804825205661],
            [-13.196831816245119, 8.470806628594008],
            [-13.19683555556789, 8.470809539400962],
          ],
        ],
      },
    },
  ],
}

/* -------------------------------------------------------------------------- */
/*                                 INIT A MAP                                 */
/* -------------------------------------------------------------------------- */

/* ----------------------------- Set up mapboxgl ---------------------------- */
mapboxgl.accessToken =
  'pk.eyJ1IjoiZ2FhbmRuZyIsImEiOiJjajhqcmwzNmEwNWw3MzVueDFtMTBiMWh2In0.9StrW8H3Biuzpp7qohMj1Q'

const map = new mapboxgl.Map({
  container: 'map', // container ID
  style: 'mapbox://styles/mapbox/satellite-v9', // style URL
  center: [-13.196747818462239, 8.470800653649318], // starting position [lng, lat]
  // center: [0, 0],
  zoom: 20, // starting zoom
})

/* -------------------------- Create a draw object -------------------------- */
const draw = new MapboxDraw({
  userProperties: true,
  displayControlsDefault: false,
  // Select which mapbox-gl-draw control buttons to add to the map.
  controls: {
    polygon: true,
    trash: true,
  },
  // Set mapbox-gl-draw to draw by default.
  // The user does not have to click the polygon control button first.
  //   defaultMode: 'draw_polygon',
})

map.addControl(draw)

/* ---------------------------- Draw the testData --------------------------- */

// Line
const point_lines_map = new Map() // Map < pointId : Set <lineId> >
const coord_point_map = new Map() // Map < Coords : pointId >
const line_points_map = new Map() // Map <lineId : [point1Id, point2Id]>

currParcels.features.forEach((feature) => {
  const coordArr = feature.geometry.coordinates[0]

  // Points:
  // Set up coords - pointId map
  for (let i = 0; i < coordArr.length; i++) {
    const p = coordArr[i]

    const pKey = p.join('_')

    if (!coord_point_map.has(pKey)) {
      const feature = {
        type: 'Point',
        coordinates: p,
      }
      const [pointId] = draw.add(feature)
      coord_point_map.set(pKey, pointId)
      draw.delete(pointId)
    }
  }

  // Lines:
  // Draw the lines
  // Set up pointId - lineIds Map
  // Set up lineId - [pId, pId] Map

  for (let i = 0; i < coordArr.length - 1; i++) {
    const p1 = coordArr[i]
    const p2 = coordArr[i + 1]

    const feature = {
      type: 'LineString',
      coordinates: [p1, p2],
    }

    // draw lines
    const [lineId] = draw.add(feature)

    // update point_lines_map
    const p1Key = p1.join('_')
    const p2Key = p2.join('_')
    const pArr = [coord_point_map.get(p1Key), coord_point_map.get(p2Key)]

    for (let key of pArr) {
      if (!point_lines_map.has(key)) {
        point_lines_map.set(key, new Set())
      }
      point_lines_map.get(key).add(lineId)
    }
    line_points_map.set(lineId, [
      coord_point_map.get(p1Key),
      coord_point_map.get(p2Key),
    ])
  }
})

map.on('draw.update', updateLine)

function updateLine(e) {
  const movedLine = e.features[0]

  const movedLineId = movedLine.id
  const movedPointIds = line_points_map.get(movedLineId)
  const movedPointCoords = movedLine.geometry.coordinates

  for (let idx of [0, 1]) {
    const pointId = movedPointIds[idx]
    const pointCoords = movedPointCoords[idx]
    const relatedLineIds = point_lines_map.get(movedPointIds[idx])
    relatedLineIds.delete(movedLineId)

    for (let lineId of relatedLineIds) {
      const twoPointIds = line_points_map.get(lineId)

      // find the moving index from the two points
      let i
      pointId === twoPointIds[0] ? (i = 0) : (i = 1)

      let lineFeature = draw.get(lineId)
      lineFeature.geometry.coordinates[i] = pointCoords

      draw.delete(lineId)
      draw.add(lineFeature)
    }
  }
}
